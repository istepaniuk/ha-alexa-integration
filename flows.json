[
    {
        "id": "19d5a0f2.130707",
        "type": "tab",
        "label": "Heating setpoint logic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f9e8465e.4242b",
        "type": "tab",
        "label": "Heating PID control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ea46506a.b17c18",
        "type": "subflow",
        "name": "Process Simulation",
        "info": "",
        "in": [
            {
                "x": 37,
                "y": 103,
                "wires": [
                    {
                        "id": "e62ba65e.ac5d58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 728.5,
                "y": 294,
                "wires": [
                    {
                        "id": "b07dce1d.e1698",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "bfed26e3.9fa28",
        "type": "server",
        "z": "",
        "name": "Home Assistant",
        "legacy": false,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    },
    {
        "id": "12932107.cee0af",
        "type": "alexa-smart-home-v3-conf",
        "z": "",
        "username": "rsgvv",
        "mqttserver": "mq-red.cb-net.co.uk",
        "webapiurl": "red.cb-net.co.uk"
    },
    {
        "id": "241e9470.7dee34",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/prolific",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r",
        "responsetimeout": "1000"
    },
    {
        "id": "f6b21c86.bc2958",
        "type": "ui_group",
        "z": "",
        "name": "PID",
        "tab": "4e05386b.c2a6c",
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "4e05386b.c2a6c",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "9f442904.c7e8e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "463b4f94.ce5448",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/cp210x",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r",
        "responsetimeout": "10000"
    },
    {
        "id": "53642155.d6438",
        "type": "alexa-smart-home-v3",
        "z": "19d5a0f2.130707",
        "conf": "12932107.cee0af",
        "device": "9123",
        "acknowledge": false,
        "name": "Temperature",
        "topic": "",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "b1b7584a.43ebc8",
                "9ac1025e.011fe"
            ]
        ],
        "icon": "font-awesome/fa-thermometer-1"
    },
    {
        "id": "ed120590.04b7e",
        "type": "trigger-state",
        "z": "19d5a0f2.130707",
        "name": "HA Thermostat",
        "server": "bfed26e3.9fa28",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "climate.home",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [],
        "constraintsmustmatch": "all",
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": true,
        "state_type": "str",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "783be855.039a18",
                "33bd3d68.ee6cba",
                "6457c74.9e71738",
                "818a8ab1.b658d8"
            ],
            []
        ]
    },
    {
        "id": "783be855.039a18",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "HA > thermostatSetPoint",
        "func": "let newState = msg.data.event.new_state.attributes;\n\nreturn {\n    acknowledge: true,\n    payload: {\n        state: {\n            thermostatSetPoint: newState.temperature\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 120,
        "wires": [
            [
                "4a9e572d.80a1",
                "aae45713.75d65"
            ]
        ]
    },
    {
        "id": "33bd3d68.ee6cba",
        "type": "change",
        "z": "19d5a0f2.130707",
        "name": "store setPoint",
        "rules": [
            {
                "t": "set",
                "p": "setPoint",
                "pt": "flow",
                "to": "msg.data.event.new_state.attributes.temperature",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 480,
        "wires": [
            [
                "54bd30fa.341f68"
            ]
        ]
    },
    {
        "id": "1484d855.3b0348",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "x+setPoint",
        "func": "flow.set(\"delta\", msg.payload);\nmsg.payload = flow.get(\"setPoint\") + msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 700,
        "wires": [
            [
                "4fdc2814.eddcf8"
            ]
        ]
    },
    {
        "id": "2a0db8c1.89508",
        "type": "change",
        "z": "19d5a0f2.130707",
        "name": "store setPoint",
        "rules": [
            {
                "t": "set",
                "p": "setPoint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 580,
        "wires": [
            [
                "efcd2bec.63725"
            ]
        ]
    },
    {
        "id": "b1b7584a.43ebc8",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Debug Cmd",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "command & ': ' & payload",
        "targetType": "jsonata",
        "x": 470,
        "y": 760,
        "wires": []
    },
    {
        "id": "9ac1025e.011fe",
        "type": "switch",
        "z": "19d5a0f2.130707",
        "name": "Cmd",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SetTargetTemperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AdjustTargetTemperature",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "4fdc2814.eddcf8",
                "52c8361d.2ff818"
            ],
            [
                "1484d855.3b0348"
            ]
        ]
    },
    {
        "id": "fd58cbb7.67a45",
        "type": "change",
        "z": "19d5a0f2.130707",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "acknowledge",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 660,
        "wires": [
            [
                "2cf5c916.6c7da6",
                "2be84c47.af2d84"
            ]
        ]
    },
    {
        "id": "2cf5c916.6c7da6",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Debug Ack",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1630,
        "y": 600,
        "wires": []
    },
    {
        "id": "2be84c47.af2d84",
        "type": "alexa-smart-home-v3-resp",
        "z": "19d5a0f2.130707",
        "x": 1560,
        "y": 660,
        "wires": []
    },
    {
        "id": "4fdc2814.eddcf8",
        "type": "api-call-service",
        "z": "19d5a0f2.130707",
        "name": "Set",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_temperature",
        "entityId": "climate.home",
        "data": "{\"hvac_mode\":\"heat\",\"temperature\":\"{{payload}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 850,
        "y": 660,
        "wires": [
            [
                "fd58cbb7.67a45",
                "2a0db8c1.89508"
            ]
        ]
    },
    {
        "id": "4a9e572d.80a1",
        "type": "alexa-smart-home-v3-state",
        "z": "19d5a0f2.130707",
        "conf": "12932107.cee0af",
        "device": "9123",
        "name": "Temperature",
        "x": 1630,
        "y": 120,
        "wires": []
    },
    {
        "id": "52c8361d.2ff818",
        "type": "api-call-service",
        "z": "19d5a0f2.130707",
        "name": "On",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "turn_on",
        "entityId": "climate.home",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 850,
        "y": 580,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-fire"
    },
    {
        "id": "2445ef88.67f078",
        "type": "alexa-smart-home-v3",
        "z": "19d5a0f2.130707",
        "conf": "12932107.cee0af",
        "device": "9124",
        "acknowledge": false,
        "name": "Set heating",
        "topic": "",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "b1b7584a.43ebc8",
                "dad1601d.2a2ee"
            ]
        ],
        "icon": "node-red-dashboard/ui_switch.png"
    },
    {
        "id": "dad1601d.2a2ee",
        "type": "switch",
        "z": "19d5a0f2.130707",
        "name": "Cmd",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TurnOn",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TurnOff",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 840,
        "wires": [
            [
                "58cd6811.03273"
            ],
            [
                "98a77681.3326a"
            ]
        ]
    },
    {
        "id": "98a77681.3326a",
        "type": "api-call-service",
        "z": "19d5a0f2.130707",
        "name": "Off",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "turn_off",
        "entityId": "climate.home",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 850,
        "y": 860,
        "wires": [
            [
                "fd58cbb7.67a45"
            ]
        ],
        "icon": "font-awesome/fa-fire"
    },
    {
        "id": "58cd6811.03273",
        "type": "api-call-service",
        "z": "19d5a0f2.130707",
        "name": "On",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "turn_on",
        "entityId": "climate.home",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 850,
        "y": 780,
        "wires": [
            [
                "fd58cbb7.67a45"
            ]
        ],
        "icon": "font-awesome/fa-fire"
    },
    {
        "id": "818a8ab1.b658d8",
        "type": "switch",
        "z": "19d5a0f2.130707",
        "name": "State",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "heat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "228e5795.fb81d"
            ],
            [
                "3afa4a05.82f696"
            ]
        ]
    },
    {
        "id": "6457c74.9e71738",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Debug HA",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 60,
        "wires": []
    },
    {
        "id": "228e5795.fb81d",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "HA > On",
        "func": "return {\n    acknowledge: true,\n    payload: {\n        state: {\n            power: \"ON\"\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 240,
        "wires": [
            [
                "66161fb0.ee1ba",
                "aae45713.75d65"
            ]
        ]
    },
    {
        "id": "3afa4a05.82f696",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "HA > Off",
        "func": "return {\n    acknowledge: true,\n    payload: {\n        state: {\n            power: \"OFF\"\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 300,
        "wires": [
            [
                "66161fb0.ee1ba",
                "aae45713.75d65"
            ]
        ]
    },
    {
        "id": "66161fb0.ee1ba",
        "type": "alexa-smart-home-v3-state",
        "z": "19d5a0f2.130707",
        "conf": "12932107.cee0af",
        "device": "9124",
        "name": "Set heating",
        "x": 1630,
        "y": 300,
        "wires": []
    },
    {
        "id": "aae45713.75d65",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Debug State",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1630,
        "y": 200,
        "wires": []
    },
    {
        "id": "63edcbc5.f207fc",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "Encoder to °C",
        "func": "msg.payload = (msg.payload / 2) + 5\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 1120,
        "wires": [
            [
                "7cf13af4.ca6984",
                "6775e2d9.b4eaac"
            ]
        ]
    },
    {
        "id": "7163aa9d.75969c",
        "type": "api-call-service",
        "z": "19d5a0f2.130707",
        "name": "Set",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_temperature",
        "entityId": "climate.home",
        "data": "{\"hvac_mode\":\"heat\",\"temperature\":\"{{payload}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1650,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "6775e2d9.b4eaac",
        "type": "delay",
        "z": "19d5a0f2.130707",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 970,
        "y": 1120,
        "wires": [
            [
                "f9fd7b29.4c1b88"
            ]
        ]
    },
    {
        "id": "f9fd7b29.4c1b88",
        "type": "change",
        "z": "19d5a0f2.130707",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "haKnob",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1120,
        "wires": [
            [
                "7163aa9d.75969c"
            ]
        ]
    },
    {
        "id": "8d13b5a3.b284f8",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "If changed",
        "func": "let knob = flow.get(\"knob\");\n\nif (flow.get(\"haKnob\") == knob)\n{\n  return null    \n}\n\nflow.set('haKnob', knob);\n\nreturn {\n    payload: knob\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 1040,
        "wires": [
            [
                "f9fd7b29.4c1b88"
            ]
        ]
    },
    {
        "id": "7cf13af4.ca6984",
        "type": "change",
        "z": "19d5a0f2.130707",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "knob",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "isKnobInhibited",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 1200,
        "wires": [
            [
                "984e40.b51219c"
            ]
        ]
    },
    {
        "id": "efcd2bec.63725",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "°C to Encoder",
        "func": "let encoderValue = flow.get(\"setPoint\") * 2 - 10; \n\nreturn { \n    payload: encoderValue\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "373d097c.358ff6"
            ]
        ]
    },
    {
        "id": "373d097c.358ff6",
        "type": "delay",
        "z": "19d5a0f2.130707",
        "name": "Limit",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1450,
        "y": 480,
        "wires": [
            [
                "c08dc009.45c8c",
                "504eee92.58eb48"
            ]
        ]
    },
    {
        "id": "c08dc009.45c8c",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Wall command",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1640,
        "y": 420,
        "wires": []
    },
    {
        "id": "cc4f7d46.5be65",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Wall event",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 450,
        "y": 1200,
        "wires": []
    },
    {
        "id": "54bd30fa.341f68",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "If knob is not inhibited",
        "func": "if(flow.get(\"isKnobInhibited\") === true){\n    return null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 480,
        "wires": [
            [
                "efcd2bec.63725"
            ]
        ]
    },
    {
        "id": "b62b72f8.d61bf8",
        "type": "change",
        "z": "19d5a0f2.130707",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "isKnobInhibited",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "984e40.b51219c",
        "type": "trigger",
        "z": "19d5a0f2.130707",
        "op1": "",
        "op2": "inhibit = false",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 1300,
        "y": 1200,
        "wires": [
            [
                "b62b72f8.d61bf8",
                "a4de9f78.6ea158"
            ]
        ]
    },
    {
        "id": "a4de9f78.6ea158",
        "type": "debug",
        "z": "19d5a0f2.130707",
        "name": "Inhibit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1650,
        "y": 1260,
        "wires": []
    },
    {
        "id": "11766614.ebd87a",
        "type": "comment",
        "z": "19d5a0f2.130707",
        "name": "Alexa events",
        "info": "",
        "x": 110,
        "y": 600,
        "wires": []
    },
    {
        "id": "77764ad.5a027b4",
        "type": "comment",
        "z": "19d5a0f2.130707",
        "name": "HomeAssistant events",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "b5bd6730.a2135",
        "type": "comment",
        "z": "19d5a0f2.130707",
        "name": "Wall thermostat events",
        "info": "",
        "x": 140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a5dbe358.0588d8",
        "type": "trigger",
        "z": "19d5a0f2.130707",
        "op1": "",
        "op2": "inhibit = false",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "8d13b5a3.b284f8"
            ]
        ]
    },
    {
        "id": "e9794c80.394bc8",
        "type": "serial in",
        "z": "19d5a0f2.130707",
        "name": "Thermostat RX",
        "serial": "241e9470.7dee34",
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "27e0aa1.cf09456",
                "cc4f7d46.5be65"
            ]
        ]
    },
    {
        "id": "504eee92.58eb48",
        "type": "serial out",
        "z": "19d5a0f2.130707",
        "name": "Thermostat TX",
        "serial": "241e9470.7dee34",
        "x": 1640,
        "y": 480,
        "wires": []
    },
    {
        "id": "27e0aa1.cf09456",
        "type": "function",
        "z": "19d5a0f2.130707",
        "name": "Parse",
        "func": "return {\n    payload: msg.payload.replace(/\\D/g,'')\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "a5dbe358.0588d8",
                "63edcbc5.f207fc"
            ]
        ]
    },
    {
        "id": "92983d1a.e780d",
        "type": "function",
        "z": "ea46506a.b17c18",
        "name": "30 sec RC + 20",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 30*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue + 20;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 626.5,
        "y": 207,
        "wires": [
            [
                "b07dce1d.e1698"
            ]
        ]
    },
    {
        "id": "f7b89c2f.d0709",
        "type": "inject",
        "z": "ea46506a.b17c18",
        "name": "Inject -0.2 at start",
        "topic": "",
        "payload": "-0.2",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 134.5,
        "y": 30,
        "wires": [
            [
                "e62ba65e.ac5d58"
            ]
        ]
    },
    {
        "id": "e8f8d785.f1ef9",
        "type": "function",
        "z": "ea46506a.b17c18",
        "name": "10 sec RC",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 10*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451,
        "y": 207,
        "wires": [
            [
                "92983d1a.e780d"
            ]
        ]
    },
    {
        "id": "e62ba65e.ac5d58",
        "type": "delay",
        "z": "ea46506a.b17c18",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 268,
        "y": 104,
        "wires": [
            [
                "82471bfb.b2c3f"
            ]
        ]
    },
    {
        "id": "483a571b.602298",
        "type": "function",
        "z": "ea46506a.b17c18",
        "name": "2 msg transport delay",
        "func": "// stores messages in a fifo until the specified number have been received, \n// then releases them as new messages are received.\n// during the filling phase the earliest message is passed on each time \n// a message is received, but it is also left in the fifo\nvar fifoMaxLength = 2;\nvar fifo = context.get('fifo') || [];\n// push the new message onto the top of the array, messages are shifted down and\n// drop off the front\nvar length = fifo.push(msg);  // returns new length\nif (length > fifoMaxLength) {\n    newMsg = fifo.shift();\n} else {\n    // not full yet, make a copy of the msg and pass it on\n    var newMsg = JSON.parse(JSON.stringify(fifo[0]));\n}\ncontext.set('fifo', fifo);\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 208,
        "wires": [
            [
                "e8f8d785.f1ef9"
            ]
        ]
    },
    {
        "id": "b07dce1d.e1698",
        "type": "function",
        "z": "ea46506a.b17c18",
        "name": "Clear all except payload",
        "func": "msg2 = {payload: msg.payload};\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "x": 545,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "82471bfb.b2c3f",
        "type": "range",
        "z": "ea46506a.b17c18",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "name": "",
        "x": 87,
        "y": 208,
        "wires": [
            [
                "483a571b.602298"
            ]
        ]
    },
    {
        "id": "ca3d13aa.24e0d",
        "type": "PID",
        "z": "f9e8465e.4242b",
        "name": "",
        "setpoint": "16",
        "pb": "2",
        "ti": "3600",
        "td": "350",
        "integral_default": "0",
        "smooth_factor": "3",
        "max_interval": "100",
        "enable": "1",
        "disabled_op": "0",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "bf74138c.78c37"
            ]
        ]
    },
    {
        "id": "407133fe.b79cf4",
        "type": "change",
        "z": "f9e8465e.4242b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "output",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 260,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    },
    {
        "id": "bf74138c.78c37",
        "type": "range",
        "z": "f9e8465e.4242b",
        "minin": "0",
        "maxin": "1",
        "minout": "40",
        "maxout": "60",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "Target water temp.",
        "x": 690,
        "y": 260,
        "wires": [
            [
                "407133fe.b79cf4",
                "53d69b5f.3dfacc"
            ]
        ]
    },
    {
        "id": "ac42ada2.2b9368",
        "type": "ui_chart",
        "z": "f9e8465e.4242b",
        "name": "",
        "group": "f6b21c86.bc2958",
        "order": 0,
        "width": "20",
        "height": "16",
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "monotone",
        "nodata": "no data",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#cf0005",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1150,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d9545f60.bad498",
        "type": "function",
        "z": "f9e8465e.4242b",
        "name": "setpoint",
        "func": "let newState = msg.data.attributes;\n\nreturn {\n    topic: \"setpoint\",\n    payload: newState.temperature\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "ca3d13aa.24e0d",
                "30969cd6.3e5be4"
            ]
        ]
    },
    {
        "id": "30969cd6.3e5be4",
        "type": "change",
        "z": "f9e8465e.4242b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "setpoint",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 180,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    },
    {
        "id": "a73e08e0.ed7a6",
        "type": "change",
        "z": "f9e8465e.4242b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "actual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 380,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    },
    {
        "id": "41b5db9c.649284",
        "type": "inject",
        "z": "f9e8465e.4242b",
        "name": "Clear chart",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "x": 910,
        "y": 120,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    },
    {
        "id": "3d2c15d2.3732e2",
        "type": "change",
        "z": "f9e8465e.4242b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "outdoors",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 440,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    },
    {
        "id": "9cf2da80.18d008",
        "type": "serial in",
        "z": "f9e8465e.4242b",
        "name": "OpenTherm RX",
        "serial": "463b4f94.ce5448",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "c32ea607.220ff",
                "e03b91f0.7fe7f"
            ]
        ]
    },
    {
        "id": "e03b91f0.7fe7f",
        "type": "function",
        "z": "f9e8465e.4242b",
        "name": "modulation_level",
        "func": "if(!msg.payload.startsWith(\"== modulation_level\")){\n    return null;    \n}\n\nreturn {\n    topic: \"modulation_level\",\n    payload:  Number(msg.payload.replace(/[^0-9.]/g,''))\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 560,
        "wires": [
            [
                "3225e6bb.57900a"
            ]
        ]
    },
    {
        "id": "e11f165e.79a418",
        "type": "serial out",
        "z": "f9e8465e.4242b",
        "name": "OpenTherm TX",
        "serial": "463b4f94.ce5448",
        "x": 1160,
        "y": 320,
        "wires": []
    },
    {
        "id": "53d69b5f.3dfacc",
        "type": "function",
        "z": "f9e8465e.4242b",
        "name": "on X / off",
        "func": "if(msg.payload > 40){\n    return {\n        payload: \"on \" + msg.payload.toFixed(1)\n    };\n}else{\n    return {\n        payload: \"off\"\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 320,
        "wires": [
            [
                "e11f165e.79a418",
                "b60fdda4.663518"
            ]
        ]
    },
    {
        "id": "87f15c28.303858",
        "type": "poll-state",
        "z": "f9e8465e.4242b",
        "name": "HA Living Room Temperature",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "1",
        "updateIntervalUnits": "minutes",
        "outputinitially": true,
        "outputonchanged": false,
        "entity_id": "sensor.living_room_temperature",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 180,
        "y": 380,
        "wires": [
            [
                "ca3d13aa.24e0d",
                "a73e08e0.ed7a6"
            ]
        ]
    },
    {
        "id": "8352c164.975d18",
        "type": "poll-state",
        "z": "f9e8465e.4242b",
        "name": "HA Outdoors Temperature",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "1",
        "updateIntervalUnits": "minutes",
        "outputinitially": true,
        "outputonchanged": false,
        "entity_id": "sensor.outside_temperature",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 170,
        "y": 440,
        "wires": [
            [
                "3d2c15d2.3732e2"
            ]
        ]
    },
    {
        "id": "f79f02ea.e01be8",
        "type": "poll-state",
        "z": "f9e8465e.4242b",
        "name": "HA Set Point",
        "server": "bfed26e3.9fa28",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "1",
        "updateIntervalUnits": "minutes",
        "outputinitially": true,
        "outputonchanged": true,
        "entity_id": "climate.home",
        "state_type": "str",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "d9545f60.bad498"
            ]
        ]
    },
    {
        "id": "b60fdda4.663518",
        "type": "debug",
        "z": "f9e8465e.4242b",
        "name": "Debug Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1150,
        "y": 280,
        "wires": []
    },
    {
        "id": "c32ea607.220ff",
        "type": "function",
        "z": "f9e8465e.4242b",
        "name": "water_temp",
        "func": "if(!msg.payload.startsWith(\"== boiler_flow_water_temp\")){\n    return null;    \n}\n\nreturn {\n    topic: \"water_temp\",\n    payload:  Number(msg.payload.replace(/[^0-9.]/g,''))\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 520,
        "wires": [
            [
                "e54d81d6.13612"
            ]
        ]
    },
    {
        "id": "e54d81d6.13612",
        "type": "delay",
        "z": "f9e8465e.4242b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    },
    {
        "id": "3225e6bb.57900a",
        "type": "delay",
        "z": "f9e8465e.4242b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 910,
        "y": 560,
        "wires": [
            [
                "ac42ada2.2b9368"
            ]
        ]
    }
]